package com.googlecode.ross.recalc;

import com.googlecode.ross.recalc.ops.*;


public class Parser {
  private static String[] opStrings = {"+","-","/","*"};  


  private Parser() {
  }

  public static Function parse (String s) {
    if (!isValid(s)) {
      return null;
    }

    s = s.replaceAll("\\s", "");

    int ind = 0;
    String token = "";
    while (curr < s.length()) {
      String curr = "" + s.charAt(ind);
      if (curr.matches("[\\d|\\.]{1}")||(curr.equals("-")&&token.length()==0)){
        if (token.length()==0&&curr.equals(".")) {
          token="0";
        }
        token+=curr;

      } else {
        OperatorNode node = null;
        if (token.matches("(-?\\d+(\\.\\d+)?")) {
          node = new Number (Double.parseDouble(token));
        } else {
          switch
        }
      }

    }
  }
}
